from django.db import models

# Create your models here.
class Registration_tbl(models.Model):
    Name=models.CharField(max_length=30,null=True)
    Location=models.CharField(max_length=30,null=True)
    Email=models.EmailField(null=True)
    Password= models.CharField(max_length=30,null=True)
    mobile=models.CharField(max_length=100,null=True)

class tbl_MedicalInformation(models.Model):
    age = models.IntegerField(null=True)
    gender = models.CharField(max_length=10, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')],null=True)
    bmi = models.FloatField(null=True)
    hypertensive = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    atrialfibrillation = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    chd = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    diabetes = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    deficiencyanemias = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    depression = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    hyperlipemia = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    renalfailure = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    copd = models.CharField(max_length=3, choices=[('yes', 'Yes'), ('no', 'No')],null=True)
    heartrate = models.FloatField(null=True)
    systolicbp = models.FloatField(null=True)
    diastolicbp = models.FloatField(null=True)
    respiratoryrate = models.FloatField(null=True)
    temperature = models.FloatField(null=True)
    spo2 = models.FloatField(null=True)
    urineoutput = models.FloatField(null=True)
    hematocrit = models.FloatField(null=True)
    rbc = models.FloatField(null=True)
    mch = models.FloatField(null=True)
    mchc = models.FloatField(null=True)
    mcv = models.FloatField(null=True)
    rdw = models.FloatField(null=True)
    leucocyte = models.FloatField(null=True)
    platelets = models.FloatField(null=True)
    neutrophils = models.FloatField(null=True)
    basophils = models.FloatField(null=True)
    lymphocyte = models.FloatField(null=True)
    pt = models.FloatField(null=True)
    inr = models.FloatField(null=True)
    ntproBNP = models.FloatField(null=True)
    creatinekinase = models.FloatField(null=True)
    creatinine = models.FloatField(null=True)
    ureanitrogen = models.FloatField(null=True)
    glucose = models.FloatField(null=True)
    bloodpotassium = models.FloatField(null=True)
    bloodsodium = models.FloatField(null=True)
    bloodcalcium = models.FloatField(null=True)
    chloride = models.FloatField(null=True)
    aniongap = models.FloatField(null=True)
    magnesiumion = models.FloatField(null=True)
    ph = models.FloatField(null=True)
    bicarbonate = models.FloatField(null=True)
    lacticacid = models.FloatField(null=True)
    pco2 = models.FloatField(null=True)
    ef = models.FloatField(null=True)
    user=models.ForeignKey(Registration_tbl,on_delete=models.CASCADE,null=True)
    result=models.CharField(max_length=100,null=True)

class DoctorRegistration(models.Model):
        name = models.CharField(max_length=100,null=True)
        email = models.EmailField(null=True)
        username = models.CharField(max_length=50,null=True)
        password = models.CharField(max_length=50,null=True)
        department = models.CharField(max_length=100,null=True)

class Hospital(models.Model):
    Name = models.CharField(max_length=100, null=True)
    Location = models.CharField(max_length=100, null=True)
    District = models.CharField(max_length=100, null=True)
    Bed_Availability = models.CharField(max_length=100, null=True)
    Map = models.CharField(max_length=100, null=True)

class tbl_DoctorBooking(models.Model):
        full_name = models.CharField(max_length=100, null=True)
        phone_number = models.CharField(max_length=100, null=True)
        email = models.EmailField(max_length=100)
        date = models.DateField(max_length=100, null=True)
        time = models.TimeField(max_length=100, null=True)
        area = models.CharField(max_length=100, null=True)
        city = models.CharField(max_length=100, null=True)
        state = models.CharField(max_length=100, null=True)
        post_code = models.CharField(max_length=100, null=True)
        user = models.ForeignKey(Registration_tbl, on_delete=models.CASCADE, null=True)
        Doctor=models.ForeignKey(DoctorRegistration,on_delete=models.CASCADE,null=True)

class tbl_Covid19Prediction(models.Model):
    breathingProblem = models.CharField(max_length=3, null=True)
    fever = models.CharField(max_length=3, null=True)
    dryCough = models.CharField(max_length=3, null=True)
    soreThroat = models.CharField(max_length=3, null=True)
    runningNose = models.CharField(max_length=3, null=True)
    asthma = models.CharField(max_length=3, null=True)
    chronicLungDisease = models.CharField(max_length=3, null=True)
    headache = models.CharField(max_length=3, null=True)
    heartDisease = models.CharField(max_length=3, null=True)
    diabetes = models.CharField(max_length=3, null=True)
    hyperTension = models.CharField(max_length=3, null=True)
    fatigue = models.CharField(max_length=3, null=True)
    gastrointestinal = models.CharField(max_length=3, null=True)
    abroadTravel = models.CharField(max_length=3, null=True)
    contactWithCovidPatient = models.CharField(max_length=3, null=True)
    attendedLargeGathering = models.CharField(max_length=3, null=True)
    visitedPublicExposedPlaces = models.CharField(max_length=3, null=True)
    familyWorkingInPublicExposedPlaces = models.CharField(max_length=3, null=True)
    wearingMasks = models.CharField(max_length=3, null=True)
    sanitizationFromMarket = models.CharField(max_length=3, null=True)
    result = models.CharField(max_length=20, null=True)
    user = models.ForeignKey(Registration_tbl, on_delete=models.CASCADE, null=True)

class contactus_tbl(models.Model):
        name = models.CharField(max_length=100,null=True)
        email = models.EmailField(max_length=254,null=True)
        subject = models.CharField(max_length=700,null=True)






